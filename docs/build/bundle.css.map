{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Button.svelte",
    "../../ControlButton.svelte",
    "../../Control.svelte",
    "../../DebugConsole.svelte",
    "../../Icon.svelte",
    "../../MidiSelector.svelte",
    "../../DeviceOptions.svelte",
    "../../Subhead.svelte",
    "../../EditControl.svelte",
    "../../EditControlButton.svelte",
    "../../TabList.svelte",
    "../../Tab.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { setContext } from 'svelte'\n  import cmp from 'semver-compare';\n  import { ConfigurationObject } from \"./Configuration.js\";\n  import { ImportExport } from \"./ImportExport.js\";\n  import { logger } from \"./logger.js\";\n  import { OxionMidi } from \"./OxionMidi.js\";\n\n  import {\n    configuration,\n    editConfiguration,\n    selectedMidiInput,\n    selectedMidiOutput,\n    webMidiEnabled,\n    editMode\n  } from \"./stores.js\";\n\n  import Button from \"./components/Button.svelte\";\n  import CheckOption from \"./components/CheckOption.svelte\";\n  import Control from \"./components/Control.svelte\";\n  import EditControl from \"./components/EditControl.svelte\";\n  import ControlButton from \"./components/ControlButton.svelte\";\n  import EditControlButton from \"./components/EditControlButton.svelte\";\n  import DebugConsole from \"./components/DebugConsole.svelte\";\n  import DeviceOptions from \"./components/DeviceOptions.svelte\";\n  import DeviceOptionsShow from \"./components/DeviceOptionsShow.svelte\";\n  import Icon from \"./components/Icon.svelte\";\n  import MidiContext from \"./components/MidiContext.svelte\";\n  import MidiEnabled from \"./components/MidiEnabled.svelte\";\n  import MidiSelector from \"./components/MidiSelector.svelte\";\n//   import imuNote from \"./components/imuNote.svelte\";\n  import Subhead from \"./components/Subhead.svelte\";\n  import { Tabs, TabList, TabPanel, Tab } from './components/tabs';\n\n  window.debugMode = true;\n\n  $editMode = false;\n  let configDirty = false;\n  let upgradeString = \"\";\n  let tips = [\"Set a channel to 0 to disable it\",\"Read the instructions on the back!\", \"Click Edit Config for device options\", \"Ignore those eject warnings\", \"The boot folder is called MT_BOOT\"]\n  let tip = tips[Math.floor(Math.random() * tips.length)]\n\n\n  editConfiguration.subscribe(c => {\n    if (c && $configuration) {\n      configDirty = !c.isEquivalent($configuration);\n    }\n  });\n\n  configuration.subscribe(c => {\n    if (c && c.firmwareVersion && window.latestVersion && !window.versionCompared) {\n      let delta = cmp(window.latestVersion,c.firmwareVersion);\n      window.versionCompared = true;\n      if(delta > 0) {\n        upgradeString = `A new version of 8mu firmware (${window.latestVersion}) is available.`;\n      } else {\n        upgradeString = \"\";\n      }\n    }\n  })\n\n  function handleMessage(message) {\n    switch (message.detail.name) {\n      case \"toggleEditMode\":\n        toggleEditMode();\n        break;\n      case \"transmitConfig\":\n        transmitConfig();\n        break;\n      case \"requestConfig\":\n        OxionMidi.requestConfig($selectedMidiOutput);\n        break;\n      case \"importConfig\":\n        ImportExport.import($editConfiguration, $configuration, editConfiguration);\n        break;\n      case \"exportConfig\":\n        ImportExport.export($configuration);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function toggleEditMode() {\n    $editMode = !$editMode;\n    if ($editMode) {\n      let oldConfig = ConfigurationObject.clone($configuration);\n      editConfiguration.update(c => oldConfig);\n    }\n  }\n\n  function transmitConfig() {\n    let sysexArray = $editConfiguration.toSysexArray();\n    logger(\"Sending sysex:\", sysexArray);\n\n    OxionMidi.sendConfiguration($editConfiguration, $selectedMidiOutput);\n\n    $configuration = $editConfiguration;\n\n    $editMode = !$editMode;\n  }\n\n  fetch(\"https://api.github.com/repos/TomWhitwell/Smith-Kakehashi/releases\")\n    .then(r => r.json())\n    .then(d => {\n      window.latestVersion = d[0].tag_name.replace(/[a-zA-z]/g, \"\");\n    });\n</script>\n\n<style>\n\n  #controls {\n    display: flex;\n    min-width: calc(16 * 60px);\n  }\n\n  #head {\n    margin-bottom: 1rem;\n    border-bottom: 1px solid #ccc;\n    display: flex;\n  }\n\n  #head h1 {\n    flex: 1 0;\n    margin: 0 0 2rem;\n  }\n\n  #head .details {\n    flex: 1 0;\n  }\n\n  p.device {\n    text-align: right;\n  }\n\n  main {\n    width: 75%;\n    margin: 0 auto;\n    min-width: calc(16*75px);\n    /* background: #fff; */\n  }\n\n  #foot {\n    font-size: 80%;\n    border-top: 1px solid #ccc;\n    padding-top: 5px;\n  }\n\n span.upgrade {\n   display: block;\n   margin-top: 25px;\n     border: 10px solid pink;\n\n     border-image: repeating-linear-gradient(\n    -55deg,\n    #000,\n    #000 5px,\n    #ffb101 5px,\n    #ffb101 10px\n  ) 10;\n   color: #000;\n   text-align: center;\n   padding: 5px;\n   background: #ffcc33; \n } \n</style>\n\n<MidiContext>\n  <main>\n    <div id=\"head\">\n      <h1>8mu Controller Editor</h1>\n      <MidiEnabled>\n        <div class=\"details\">\n          <!-- <MidiSelector /> -->\n          {#if $configuration}\n            <p class='device'>\n              Connected: <strong>{$configuration.device().name}</strong> running firmware <strong>{$configuration.firmwareVersion}</strong>\n              {#if upgradeString.trim() != \"\"}\n              <span class='upgrade'>\n                {upgradeString}\n                <a href=\"https://github.com/TomWhitwell/Smith-Kakehashi/releases\">Download</a>\n              </span>\n              {/if}\n            </p>\n          {:else}\n            <p class='device'>No device connected.</p>\n          {/if}\n        </div>\n      </MidiEnabled>\n    </div>\n    <MidiEnabled fallback=\"WebMIDI could not be enabled. Please use a web browser that supports WebMIDI, such as Google Chrome, and allow the browser to use MIDI Devices.\">\n      {#if $configuration}\n        {#if $editMode}\n          <Subhead title=\"Bank {$configuration.pageNumber + 1}: Edit configuration\">\n            <Button label=\"Cancel\" icon=\"times\" clickMessageName=\"toggleEditMode\" on:message={handleMessage} />\n            <Button label=\"Import config\" icon=\"file-import\" clickMessageName=\"importConfig\" on:message={handleMessage}/>\n            <Button label=\"Update controller\" icon=\"download\" clickMessageName=\"transmitConfig\" disabled={!configDirty} on:message={handleMessage}  />\n          </Subhead>\n          <Tabs>\n            <TabList>\n              <Tab>USB</Tab> \n              <Tab>TRS Midi</Tab> \n              <Tab>USB Buttons</Tab> \n              <Tab>TRS Buttons</Tab> \n              <Tab>Device Options</Tab> \n            </TabList>\n\n         <TabPanel>\n              <div id=\"controls\">\n                {#each $editConfiguration.usbControls as editControl, index}\n                  {#if index < $configuration.device().controlCount}\n                    <EditControl {editControl} {index} />\n                  {/if}\n                {/each}\n              </div>\n            </TabPanel>\n          \n            <TabPanel>\n              <div id=\"controls\">\n                {#each $editConfiguration.trsControls as editControl, index}\n                  {#if index < $configuration.device().controlCount}\n                    <EditControl {editControl} {index} />\n                  {/if}\n                {/each}\n              </div>\n            </TabPanel>\n\n            <TabPanel>\n               <div id=\"controls\">\n                {#each $editConfiguration.usbButtons as editControl, index}\n                  {#if index < $configuration.device().buttonCount}\n                    <EditControlButton {editControl} {index} />\n                    \n                  {/if}\n                {/each}\n              </div>\n            </TabPanel>\n            \n            <TabPanel>\n               <div id=\"controls\">\n                {#each $editConfiguration.trsButtons as editControl, index}\n                  {#if index < $configuration.device().buttonCount}\n                    <EditControlButton {editControl} {index} />\n                  {/if}\n                {/each}\n              </div>\n            </TabPanel>\n\n            <TabPanel>\n              <DeviceOptions />\n            </TabPanel>\n            \n          </Tabs>\n        {:else}\n          <Subhead title=\"Bank {$configuration.pageNumber + 1}: Current Configuration\">\n            <Button label=\"Export current config\" icon=\"file-export\" clickMessageName=\"exportConfig\" on:message={handleMessage}/> \n            <Button label=\"Edit Config\" icon=\"pencil-alt\" clickMessageName=\"toggleEditMode\" on:message={handleMessage} />\n            <Button label=\"Reload config from controller\" icon=\"sync\" clickMessageName=\"requestConfig\" on:message={handleMessage}/> \n          </Subhead>\n          <Tabs>\n            <TabList>\n              <Tab>USB</Tab> \n              <Tab>TRS Midi</Tab> \n                <Tab>USB Buttons</Tab> \n                <Tab>TRS Buttons</Tab> \n\n            </TabList>\n            <TabPanel>\n              <div id=\"controls\">\n                {#each $configuration.usbControls as control, index}\n                  {#if index < $configuration.device().controlCount}\n                    <Control {control} {index} />\n                  {/if}\n                {/each}\n              </div>\n            </TabPanel>\n\n            <TabPanel>\n              <div id=\"controls\">\n                {#each $configuration.trsControls as control, index}\n                  {#if index < $configuration.device().controlCount}\n                    <Control {control} {index} disableValue={true} />\n                  {/if}\n                {/each}\n              </div>\n              <p>There is no realtime preview of the TRS outputs.</p>\n            </TabPanel>\n            \n            \n                      <TabPanel>\n               <div id=\"controls\">\n                {#each $configuration.usbButtons as control, index}\n                  {#if index < $configuration.device().buttonCount}\n                    <ControlButton {control} {index} />\n                  {/if}\n                {/each}\n              </div>\n            </TabPanel>\n            \n            <TabPanel>\n               <div id=\"controls\">\n                {#each $configuration.trsButtons as control, index}\n                  {#if index < $configuration.device().buttonCount}\n                    <ControlButton {control} {index} />\n                  {/if}\n                {/each}\n              </div>\n              \n            </TabPanel>\n\n\n            \n            \n          </Tabs>\n<p>\nFader blink {#if $configuration.faderBlink}\non\n{:else if !$configuration.faderBlink}\noff \n{/if}\n | \n \n\n \nGesture blink {#if $configuration.accelBlink}\non\n{:else if !$configuration.accelBlink}\noff\n{/if}\n | \n \n\n \nUsb on {#if $configuration.controllerFlip}\nleft\n{:else if !$configuration.controllerFlip}\nright \n{/if}\n | \n \n \nMidi thru {#if $configuration.midiThru}\non\n{:else if !$configuration.midiThru}\noff \n{/if}\n | \n \n\n \n{#if $configuration.midiMode}\nMidi Type B\n{:else if !$configuration.midiMode}\nMidi Type A\n{/if}  |\n \n \n<!-- \nDX mode {#if $configuration.dxMode}\non\n{:else if !$configuration.dxMode}\noff \n{/if}\n -->\n \n Tip: {tip}\n \n</p>\n\n\n\n          \n        {/if}\n        <p />\n      {:else}\n        <p>Searching for a controller via USB, hang on a second or ten. <br><p>If you haven't plugged in your 8mu, do it now.</p>\n      {/if}\n    </MidiEnabled>\n    <div id=\"foot\">8mu Editor v{\"1.0.1\"}</div>\n  </main>\n\n</MidiContext>\n",
    "\n<script>\n\timport { createEventDispatcher } from 'svelte';\n\n  import Icon from './Icon.svelte';\n\n  export let label;\n  export let clickMessageName = null;\n  export let icon = null;\n  export let disabled = false;\n\n  const dispatch = createEventDispatcher();\n\n  function dispatchClick() {\n    dispatch('message', {\n      name: clickMessageName\n    })\n  }\n</script>\n\n<style>\n  div {\n    margin: 0;\n    display: inline-block;\n  }\n  button {\n    text-align: left;\n    border-radius: 5px;\n    display: inline-block;\n  }\n</style>\n\n<div>\n  <button disabled={disabled} on:click={dispatchClick}>\n    {#if icon}\n    <Icon i=\"{icon}\" />\n    {/if}\n    { label }\n  </button>\n</div>",
    "<script>\n  export let control;\n  export let index;\n  export let disableValue = false;\n  let modeNames = [\"CC\", \"Keyboard\"];\n  let buttonNames = [\"A\", \"B\", \"C\", \"D\"]\n  let CHROMATIC = [ 'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B' ]\n  function fromMidi (midi) {\n    var name = CHROMATIC[midi % 12]\n    var oct = Math.floor(midi / 12) - 1\n    return name + oct}\n  \n</script>\n<dl class='config-column'>\n  <dt class='index'>{buttonNames[index]}</dt>\n  <dt>Channel</dt>\n  <dd>{control.channel}</dd>\n  <dt>Mode</dt>\n  \n  \n  <dd>{modeNames[control.mode]}</dd>\n{#if control.mode == \"1\"}\n  <dt>Note Number</dt>\n  <dd>{control.paramA} ({fromMidi(control.paramA)})</dd>\n      \n\n    <dt>Velocity</dt>\n  <dd>{control.paramB}</dd>\n{:else}\n  <dt>CC</dt>\n  <dd>{control.paramA}</dd>\n    <dt>On Value</dt>\n  <dd>{control.paramB}</dd>\n\n\n{/if}\n</dl>\n\n<style>\n  dl {\n    flex: 1;\n    text-align: center;\n  }\n  dt {\n    font-weight: bold;\n    border-top: 1px solid #aaa;\n    padding-top: 0.5rem;\n    margin-right: 5px;\n  }\n\n  dt.index {\n    background: #666;\n    color: #f0f0f0;\n    padding: 0.5rem 0;\n  }\n\n  dd {\n    padding: 0 0 0.5rem 0;\n    border-bottom: 1px solid #aaa;\n    margin: 0;\n    margin-right: 5px;\n  }\n\n  dd.display {\n    height: 150px;\n    position: relative;\n    padding: 0 0 0.5rem 0;\n  }\n  .bar {\n    background: black;\n    display: block;\n    width: 35px;\n    margin: 0 auto;\n  }\n\n  .inner {\n    bottom: 0.5rem;\n    position: absolute;\n    width: 100%;\n  }\n\n  span {\n    display: block;\n    position: absolute;\n    color: white;\n    padding: 0;\n    top: 6px;\n    left: 0;\n    width: 100%;\n  }\n\n  span.lowvalue {\n    top: -20px;\n    color: black;\n  }\n</style>",
    "<script>\n  export let control;\n  export let index;\n  export let disableValue = false;\n  let channelNames = [\"OFF\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\"]\n\n  let names = [\"Fader 1\", \"Fader 2\", \"Fader 3\", \"Fader 4\", \"Fader 5\", \"Fader 6\",\"Fader 7\", \"Fader 8\", \" ↑ Front\", \"↑ Back\", \"↑ Right\", \"↑ Left\", \"⟳\", \"⟲\",  \"ʎɐʍ sᴉɥʇ\", \"this way\"];\n  let channelColours=[125,125,125,125,125,125,125,125,155,155,155,155,155,155,155,155]\n</script>\n\n<dl class='config-column'>\n  <dt class='index' style='background-color: rgb({channelColours[index]},125,125)'>{names[index]}</dt>\n  <dt>Channel</dt>\n  <dd>{channelNames[control.channel]}</dd>\n  <dt>CC</dt>\n  <dd>{control.cc}</dd>\n  {#if !disableValue}\n  <dt>Value</dt>\n  <dd class='display'>\n    <div class='inner'>\n      {#if control.val !== undefined}\n      <span class=\"{control.val < 27 ? 'lowvalue':''}\">{control.val}</span>\n      {/if}\n      <div class='bar' style=\"height: {control.val}px; background-color: rgb({channelColours[index]},125,125)\"></div>\n    </div>\n  </dd>\n  {/if}\n</dl>\n\n<style>\n  dl {\n    flex: 1;\n    text-align: center;\n  }\n  dt {\n    font-weight: bold;\n    border-top: 1px solid #aaa;\n    padding-top: 0.5rem;\n    margin-right: 5px;\n  }\n\n  dt.index {\n    background: #666;\n    color: #f0f0f0;\n    padding: 0.5rem 0;\n  }\n\n  dd {\n    padding: 0 0 0.5rem 0;\n    border-bottom: 1px solid #aaa;\n    margin: 0;\n    margin-right: 5px;\n  }\n\n  dd.display {\n    height: 150px;\n    position: relative;\n    padding: 0 0 0.5rem 0;\n  }\n  .bar {\n    background: black;\n    display: block;\n    width: 35px;\n    margin: 0 auto;\n  }\n\n  .inner {\n    bottom: 0.5rem;\n    position: absolute;\n    width: 100%;\n  }\n\n  span {\n    display: block;\n    position: absolute;\n    color: white;\n    padding: 0;\n    top: 6px;\n    left: 0;\n    width: 100%;\n  }\n\n  span.lowvalue {\n    top: -20px;\n    color: black;\n  }\n</style>",
    "<script>\n  import Icon from \"./Icon.svelte\";\n\n  function toggleConsole(e) {\n    debugConsole.toggleAttribute(\"hidden\");\n  }\n\n  let debugConsole;\n</script>\n<style>\n  #debugconsole {\n    margin-top: 4rem;\n    opacity: 0.5;\n  }\n\n  #debugconsole textarea {\n    font-family: monospace;\n    color: #eee;\n    background: #111;\n    border: 1px solid #888;\n    width: 50%;\n  }\n</style>\n<div id=\"debugconsole\">\n  <button on:click={toggleConsole}>\n    <Icon i=\"terminal\" />\n    Toggle debug console\n  </button>\n  <div hidden id=\"console\" bind:this={debugConsole}>\n    <textarea cols=\"40\" rows=\"8\" id=\"current_config\" />\n  </div>\n</div>",
    "<script>\n  export let i;\n  export let classList = \"\";\n</script>\n\n<style>\n  span.fas.mid {\n    color: #888;\n  }\n  span.fas.light {\n    color: #ccc;\n  }\n</style>\n<span class=\"fas fa-{i} {classList}\"></span>",
    "<script>\n  import {\n    midiInputs,\n    midiOutputs,\n    selectedMidiInput,\n    selectedMidiOutput,\n  } from \"../stores.js\";\n\n  import { onMount, onDestroy } from 'svelte';\n\n  import { OxionMidi } from \"../OxionMidi.js\";\n  import Icon from \"./Icon.svelte\";\n\n  let container;\n  let changed=false;\n  let firstRunIn = true;\n  let firstRunOut = true;\n\n  onMount(() => {\n    const unsubscribeInputs = midiInputs.subscribe(value => {\n      if(firstRunIn) {\n        firstRunIn = false;\n        return;\n      }\n      changed = true;\n      setTimeout(() => {\n        changed = false\n      },750);\n    });\n\n    const unsubscribeOutputs = midiOutputs.subscribe(value => {\n      if(firstRunOut) {\n        firstRunOut = false;\n        return;\n      }\n      changed = true;\n      setTimeout(() => {\n        changed = false\n      },750);\n    });\n    \n    onDestroy(() => {\n      unsubscribeInputs(); unsubscribeOutputs();\n    });\n  });\n\n</script>\n\n<style>\n  .container {\n    text-align: right;\n  }\n\n  .wrap {\n    display: inline-block;\n  }\n\n  label {\n    display: inline-block;\n    font-weight: bold;\n  }\n  select {\n    display: inline-block;\n    width: 240px;\n    transition: 0.75s ease;\n  }\n  \n  .changed select {\n    transition: 0.75s ease;\n    box-shadow: 0 0 10px #800;\n  }\n\n  p {\n    margin: 0;\n  }\n</style>\n\n<div class=\"container {changed ? 'changed':''}\">\n  <div class='wrap'>\n    <p>\n      <!-- <Icon classList=\"mid\" i=\"sliders-h\" /> -->\n      <label>Input:</label>\n      {#if $midiInputs.length > 0}\n        <select bind:value={$selectedMidiInput} on:change='{() => selectedMidiInput.update(old => $selectedMidiInput) }'>\n          {#each $midiInputs as input}\n            <!-- <option value={input}>{input.manufacturer} {input.name}</option> -->\n            <option value={input}>{input.name}</option>\n          {/each}\n        </select>\n      {:else}No MIDI inputs detected.{/if}\n    </p>\n\n    <p>\n      <label>Output:</label>\n      {#if $midiOutputs.length > 0}\n        <select bind:value={$selectedMidiOutput} on:change='{() => selectedMidiOutput.update(old => $selectedMidiOutput) }'>\n          {#each $midiOutputs as output}\n            <!-- <option value={output}>{output.manufacturer} {output.name}</option> -->\n            <option value={output}>{output.name}</option>\n            i\n        {/each}\n      </select>\n      {:else}No MIDI outputs detected.{/if}\n    </p>\n  </div>\n</div>\n",
    "\n<script>\n  import { logger } from \"../logger.js\";\n\n  import {\n    configuration,\n    editConfiguration,\n  } from \"../stores.js\";\n\n  import CheckOption from \"./CheckOption.svelte\";\n\n  function touchControl() {\n    editConfiguration.update(old => $editConfiguration);\n  }\n</script>\n\n<style>\n  p.note {\n    width: 600px;\n    line-height: 1.2;\n  }\n\n  p.note.small {\n    font-size: 85%;\n  }\n  label {\n    font-weight: bold;\n  }\n</style>\n\n\n{#if $configuration.device().capabilities.led}\n<CheckOption bind:checked={$editConfiguration.faderBlink}>\n  Blink LEDs on fader movements\n</CheckOption>\n\n<CheckOption bind:checked={$editConfiguration.accelBlink}>\n  Blink LEDs on accelerometer movements\n</CheckOption>\n{/if}\n\n<CheckOption bind:checked={$editConfiguration.controllerFlip}>\n  Rotate controller 180º\n</CheckOption>\n\n<CheckOption bind:checked={$editConfiguration.midiThru}>\n  Soft MIDI thru (echo MIDI clock/note data sent to USB out of the minijack)\n</CheckOption>\n\n<CheckOption bind:checked={$editConfiguration.midiMode}>\n  {#if $editConfiguration.midiMode}\nMidi Type B (Arturia)\n{:else if !$editConfiguration.midiMode}\nMidi Type A (Make Noise, Intellijel)\n{/if}\n</CheckOption>\n\n<!-- \n<CheckOption bind:checked={$editConfiguration.dxMode}>\n  DX7 Mode - sends DX sysex changes from TRS [Coming Soon]\n</CheckOption>\n-->\n\n\n<hr/>\n\n<h3>Fader calibration</h3>\n\n{#if $configuration.pageNumber > 0}\n\n<b>NB: Fader Calibration is global, and can only be changed in Bank 1</b>\n\n{:else}\n<div>\n  <label>Fader Minimum raw value</label>\n  <input\n    type=\"number\"\n    bind:value={$editConfiguration.fadermin}\n    on:change={touchControl}\n    min=\"0\"\n    max=\"{(1 << 13) - 1}\" />\n</div>\n<div>\n  <label>Fader Maximum raw value</label>\n  <input\n    type=\"number\"\n    bind:value={$editConfiguration.fadermax}\n    on:change={touchControl}\n    min=\"0\"\n    max=\"{(1 << 13) - 1}\" />\n</div>\n\n\n<p class='note'>\n  Every fader is slightly different - depending on conditions when it was manufactured. You shouldn't touch this unless you are having issues with your faders either reaching <code>127</code> before the end of their travel, or not at all. <br/><br/>\n  NB: these instructions are quite counter-intuitive, so read this carefully!<br /> \n\n&#8226;  \"Raw\" analog values are read from the faders between 0 and 4096. <br/>\n&#8226;  For Reasons, the Fader Maximum value relates to the BOTTOM of the fader range (assuming the USB cable is on the right so the controller is not in 'flipped' mode). The Fader Minimum relates to the TOP of the range.<br />\n&#8226;  If when you pull the fader down, it sticks at 1 or 2 or more, so doesn't get all the way to 0, you should reduce the Fader Maximum value, maybe to 4080.<br />\n&#8226;  If when you push the fader up, it stick at 126, 125 or less, so doesn't get all the way to 127, you should increase the Fader Minimum value, maybe to 100.<br />\n&#8226;  Defaults are Min = 15, Max = 4080. \n</p>\n  \n{/if}\n\n\n\n\n  \n\n\n\n{#if $configuration.device().capabilities.i2c}\n<hr />\n<h3>I2C Leader/Follower</h3>\n<select bind:value={$editConfiguration.i2cMaster} on:change={touchControl}>\n  <option value={false}>Follower</option>\n  <option value={true}>Leader</option>\n</select>\n\n<p class='note'><strong>Follower</strong> mode is for use with Teletype.</p>\n<p class='note'><strong>Leader</strong> mode is for use with Ansible, TXo, ER-301. 16n will not respond to Teletype when in leader mode.</p>\n<p class='note'>This will not take effect until you restart (disconnect/reconnect) your 16n.</p>\n<p class='note small'>(\"Leader\" is sometimes also referred to as 'master' mode)</p>\n\n{/if}\n",
    "<script>\n  export let title;\n</script>\n\n<style>\n  .subhead {\n    display: flex;\n  }\n\n  .subhead h2 {\n    flex: 3;\n    margin: 0;\n  }\n\n  .subhead :global(p) {\n    margin: 0;\n  }\n\n  .subhead .details {\n    flex: 2;\n    text-align: right;\n  }\n</style>\n\n<div class=\"subhead\">\n  <h2>\n    {title}\n  </h2>\n  <div class='details'>\n    <slot></slot>\n  </div>\n</div>",
    "<script>\n  import { editConfiguration } from \"../stores.js\";\n\n  export let index;\n  export let editControl;\n\n  let possibleChannels = Array.from(Array(17).keys());\n  possibleChannels.forEach((c, i) => (possibleChannels[i] = c ));\n//   possibleChannels.forEach((c, i) => (possibleChannels[i] = c + 1));\n\n  let channelNames = [\"OFF\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\"]\n\n  let names = [\"Fader 1\", \"Fader 2\", \"Fader 3\", \"Fader 4\", \"Fader 5\", \"Fader 6\",\"Fader 7\", \"Fader 8\", \" ↑ Front\", \"↑ Back\", \"↑ Right\", \"↑ Left\", \"⟳\", \"⟲\",  \"ʎɐʍ sᴉɥʇ\", \"this way\"];\n  let channelColours=[125,125,125,125,125,125,125,125,155,155,155,155,155,155,155,155]\n  let possibleCCs = Array.from(Array(128).keys());\n\n  function touchControl() {\n    editConfiguration.update(old => $editConfiguration);\n  }\n</script>\n\n<style>\n  dl {\n    flex: 1;\n    text-align: center;\n  }\n  dt {\n    font-weight: bold;\n    border-top: 1px solid #aaa;\n    padding-top: 0.5rem;\n    margin-right: 5px;\n  }\n\n  dt.index {\n    background: #666;\n    color: #f0f0f0;\n    padding: 0.5rem 0;\n  }\n\n  dd {\n    padding: 0 0 0.5rem 0;\n    border-bottom: 1px solid #aaa;\n    margin: 0;\n    margin-right: 5px;\n  }\n</style>\n\n<dl class=\"config-column\">\n  <dt class='index' style='background-color: rgb({channelColours[index]},125,125)'>{names[index]}</dt>\n  <dt>Channel</dt>\n  <dd>\n    <select bind:value={editControl.channel} on:change={touchControl}>\n      {#each possibleChannels as channel}\n        <option value={channel}>{channelNames[channel]}</option>\n      {/each}\n    </select>\n  </dd>\n  <dt>CC</dt>\n  <dd>\n    <input\n      type=\"number\"\n      bind:value={editControl.cc}\n      on:change={touchControl}\n      min=\"1\"\n      max=\"127\" />\n  </dd>\n</dl>\n",
    "<script>\n  import { editConfiguration } from \"../stores.js\";\n  import Radio from './radioButton.svelte';\n\n  export let index;\n  export let editControl;\n\n  let possibleChannels = Array.from(Array(16).keys());\n  possibleChannels.forEach((c, i) => (possibleChannels[i] = c + 1));\n  let possibleCCs = Array.from(Array(128).keys());\n  let possibleModes = Array.from(Array(2).keys());\n  let modeNames = [\"CC\", \"Keyboard\"];\n  function touchControl() {\n    editConfiguration.update(old => $editConfiguration);\n  }\n  \n    let buttonNames = [\"A\", \"B\", \"C\", \"D\"];\n  let CHROMATIC = [ 'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B' ];\n  function fromMidi (midi) {\n    var name = CHROMATIC[midi % 12]\n    var oct = Math.floor(midi / 12) - 1\n    return name + oct};\n  \n</script>\n\n<style>\n  dl {\n    flex: 1;\n    text-align: center;\n  }\n  dt {\n    font-weight: bold;\n    border-top: 1px solid #aaa;\n    padding-top: 0.5rem;\n    margin-right: 5px;\n  }\n\n  dt.index {\n    background: #666;\n    color: #f0f0f0;\n    padding: 0.5rem 0;\n  }\n\n  dd {\n    padding: 0 0 0.5rem 0;\n    border-bottom: 1px solid #aaa;\n    margin: 0;\n    margin-right: 5px;\n  }\n</style>\n\n<dl class=\"config-column\">\n  <dt class='index'>Button {buttonNames[index]}</dt>\n  <dt>Channel</dt>\n  <dd>\n    <select bind:value={editControl.channel} on:change={touchControl}>\n      {#each possibleChannels as channel}\n        <option value={channel}>{channel}</option>\n      {/each}\n    </select>\n  </dd>\n\n  <dt>Mode</dt>\n  <dd>\n   <select bind:value={editControl.mode} on:change={touchControl}>\n {#each possibleModes as mode}\n        <option value={mode}>{modeNames[mode]}</option>\n        {/each}\n    </select>\n\n  </dd>\n\n\n{#if editControl.mode == \"1\"}\n  <dt>Note number</dt>\n  <dd>\n   <select bind:value={editControl.paramA} on:change={touchControl}>\n {#each possibleCCs as CC}\n        <option value={CC}>{CC}</option>\n        {/each}\n    </select>\n    ({fromMidi(editControl.paramA)})\n  </dd>\n  \n  \n  <dt>Velocity</dt>\n  <dd>\n   <select bind:value={editControl.paramB} on:change={touchControl}>\n {#each possibleCCs as CC}\n        <option value={CC}>{CC}</option>\n        {/each}\n    </select>\n  </dd>\n  \n  \n  {:else}\n    <dt>Controller</dt>\n  <dd>\n   <select bind:value={editControl.paramA} on:change={touchControl}>\n {#each possibleCCs as CC}\n        <option value={CC}>{CC}</option>\n        {/each}\n    </select>\n  </dd>\n  \n  \n  <dt>On value</dt>\n  <dd>\n   <select bind:value={editControl.paramB} on:change={touchControl}>\n {#each possibleCCs as CC}\n        <option value={CC}>{CC}</option>\n        {/each}\n    </select>\n  </dd>\n  \n  \n  \n  {/if}\n  \n</dl>\n",
    "<div class=\"tab-list\">\n\t<slot></slot>\n</div>\n\n<style>\n\t.tab-list {\n\t\tborder-bottom: 1px solid #888;\n    margin-bottom: 1rem;\n    height: 32px;\n\t}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { TABS } from './Tabs.svelte';\n\n\tconst tab = {};\n\tconst { registerTab, selectTab, selectedTab } = getContext(TABS);\n\n\tregisterTab(tab);\n</script>\n\n<style>\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tborder-bottom: 1px solid #888;\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\tcolor: #aaa;\n    padding-left: 6px;\n    padding-right: 6px;\n\t}\n\t\n\t.selected {\n\t\t/* border-bottom: 2px solid teal; */\n    border-top: 1px solid #888;\n    border-right: 1px solid #888;\n    border-left: 1px solid #888;\n    border-bottom: 1px solid #f0f0f0;\n    border-radius: 2px;\n\t\tcolor: #333;\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n  \n  button:hover {\n    cursor: pointer;\n    border-top: 1px solid #888;\n    border-right: 1px solid #888;\n    border-left: 1px solid #888;\n  }\n</style>\n\n<button class:selected=\"{$selectedTab === tab}\" on:click=\"{() => selectTab(tab)}\">\n\t<slot></slot>\n</button>"
  ],
  "names": [],
  "mappings": "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"
}